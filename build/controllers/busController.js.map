{"version":3,"sources":["../../server/controllers/busController.js"],"names":["Bus","createBus","req","res","body","error","status","json","details","message","queryText","number_plate","manufacturer","model","year","capacity","values","existingPlate","pool","query","rows","length","rowsInsert","data"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AACA;;AACA;;;;;;;;AAGA,IAAMA,GAAG,2BAAG;AAEJC,EAAAA,SAFI;AAAA;AAAA;AAAA,6CAEMC,GAFN,EAEWC,GAFX;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CAGU,iCAAgBD,GAAG,CAACE,IAApB,CAHV,GAGAC,KAHA,QAGAA,KAHA;AAAA;;AAAA,mBAIJA,KAJI;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA,+CAIUF,GAAG,CAACG,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAED,gBAAAA,MAAM,EAAE,GAAV;AAAeD,gBAAAA,KAAK,EAAEA,KAAK,CAACG,OAAN,CAAc,CAAd,EAAiBC;AAAvC,eAArB,CAJV;;AAAA;AAAA;;AAAA;AAMFC,cAAAA,SANE;AAAA,8CASsDR,GAAG,CAACE,IAT1D,GASAO,YATA,SASAA,YATA,EAScC,YATd,SAScA,YATd,EAS4BC,KAT5B,SAS4BA,KAT5B,EASmCC,IATnC,SASmCA,IATnC,EASyCC,QATzC,SASyCA,QATzC;AAUFC,cAAAA,MAVE,2BAUO,CAACL,YAAD,EAAeC,YAAf,EAA6BC,KAA7B,EAAoCC,IAApC,EAA0CC,QAA1C,CAVP;AAWFE,cAAAA,aAXE,2BAWc,2CAXd;AAAA;AAAA;AAAA,qBAYeC,eAAKC,KAAL,CAAWF,aAAX,EAA0B,CAACN,YAAD,CAA1B,CAZf;;AAAA;AAAA;AAYAS,cAAAA,IAZA,SAYAA,IAZA;AAAA;;AAAA,oBAcJA,IAAI,CAACC,MAAL,GAAc,CAdV;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA,+CAcoBlB,GAAG,CAACG,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAED,gBAAAA,MAAM,EAAE,OAAV;AAAmBD,gBAAAA,KAAK,EAAE;AAA1B,eAArB,CAdpB;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAiB6Ba,eAAKC,KAAL,CAAWT,SAAX,EAAsBM,MAAtB,CAjB7B;;AAAA;AAAA;AAiBQM,cAAAA,UAjBR,SAiBEF,IAjBF;AAAA;AAAA,+CAkBCjB,GAAG,CAACG,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAC1BD,gBAAAA,MAAM,EAAE,SADkB;AAE1BiB,gBAAAA,IAAI,EAAE;AACJD,kBAAAA,UAAU,EAAVA;AADI;AAFoB,eAArB,CAlBD;;AAAA;AAAA;AAAA;AAAA;AAAA,+CAyBCnB,GAAG,CAACG,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAED,gBAAAA,MAAM,EAAE,OAAV;AAAmBD,gBAAAA,KAAK,EAAE;AAA1B,eAArB,CAzBD;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA,CAAH,CAAT;eA8BeL,G","sourcesContent":["/* eslint-disable camelcase */\nimport pool from '../models/db/db';\nimport authenticateBus from '../helpers/authenticateBus';\n\n\nconst Bus = {\n\n  async createBus(req, res) {\n    const { error } = authenticateBus(req.body);\n    if (error) return res.status(400).json({ status: 400, error: error.details[0].message });\n\n    const queryText = `INSERT INTO bus(number_plate, manufacturer, model, year, capacity) VALUES($1, $2, $3, $4, $5)\n    RETURNING *`;\n\n    const { number_plate, manufacturer, model, year, capacity } = req.body;\n    const values = [number_plate, manufacturer, model, year, capacity];\n    const existingPlate = 'SELECT * FROM bus WHERE number_plate = $1';\n    const { rows } = await pool.query(existingPlate, [number_plate]);\n\n    if (rows.length > 0) return res.status(409).json({ status: 'error', error: 'Number plate already exists' });\n\n    try {\n      const { rows: rowsInsert } = await pool.query(queryText, values);\n      return res.status(200).json({\n        status: 'success',\n        data: {\n          rowsInsert,\n        },\n      });\n    } catch (e) {\n      return res.status(500).json({ status: 'error', error: 'Internal server error' });\n    }\n  },\n};\n\nexport default Bus;\n"],"file":"busController.js"}