{"version":3,"sources":["../../server/middlewares/auth.js"],"names":["dotenv","config","process","env","secret","secretKey","SECRET_KEY","expirationTime","queryUser","decoded","queryText","pool","query","id","rows","tokenValidator","validateToken","req","res","next","headers","token","jwt","verify","err","status","json","error","user","validateAdminToken","is_admin","verifyUser","Boolean","generateToken","email","sign","expiresIn","hashPassword","password","hashSync","bcrypt","genSaltSync","registerValidator","authenticateUser","signupValidator","body","details","message","loginValidator","UserLoginValidator","validateTrip","authenticateTrip","tripValidator","booktripValidate","authenticateBook","bookingValidator","editBookedSeatValidate","editBookedSeat"],"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","sourcesContent":["import jwt from 'jsonwebtoken';\nimport dotenv from 'dotenv';\nimport bcrypt from 'bcrypt';\nimport authenticateUser from '../helpers/authenticateUser';\nimport authenticateTrip from '../helpers/authenticateTrip';\nimport authenticateBook from '../helpers/authenticateBooking';\nimport pool from '../models/db/db';\n\n\ndotenv.config();\nconst { secret } = process.env;\n\nconst secretKey = process.env.SECRET_KEY;\n\nconst expirationTime = '10h';\n\n\n// export const auth = () => {\n//   const { secret } = process.env;\n//   return jwt({ secret });\n// };\n\nasync function queryUser(decoded) {\n  const queryText = 'SELECT * FROM users WHERE id=$1';\n  const { rows } = await pool.query(queryText, [decoded.id]);\n  return rows;\n}\n\n\nexport const tokenValidator = {\n  async validateToken(req, res, next) {\n    const { token } = req.headers;\n    if (token) {\n      jwt.verify(token, secret, async (err, decoded) => {\n        if (err) return res.status(401).json({ status: 'error', error: 'Failed to authenticate token' });\n\n        const rows = await queryUser(decoded);\n\n        if (rows[0]) {\n          req.user = rows[0];\n          req.decoded = decoded;\n          return next();\n        }\n        return res.status(401).json({ status: 'error', error: 'Not a valid user' });\n      });\n    } else {\n      return res.status(400).json({ status: 'error', error: 'token not provided' });\n    }\n  },\n\n  async validateAdminToken(req, res, next) {\n    const { token } = req.headers;\n    if (token) {\n      jwt.verify(token, secret, async (err, decoded) => {\n        if (err) return res.status(401).json({ status: 'error', error: 'Failed to authenticate token' });\n        const rows = await queryUser(decoded);\n\n        if (rows[0] && rows[0].is_admin) {\n          req.user = rows[0];\n          req.decoded = decoded;\n          return next();\n        }\n        return res.status(403).json({ status: 'error', error: 'Not an admin user' });\n      });\n    } else {\n      return res.status(400).json({ status: 'error', error: 'token not valid' });\n    }\n  },\n};\n\nexport const verifyUser = (req, res, next) => {\n  const { token } = req.headers;\n  if (!token) {\n    return res.status(401).json({\n      status: 401,\n      error: 'No token provided.',\n    });\n  }\n  jwt.verify(token, process.env.SECRET_KEY, (err, decoded) => {\n    if (err) {\n      return res.status(500).json({\n        status: 500,\n        error: 'Failed to Authenticate token',\n      });\n    }\n    req.user = decoded;\n  });\n  if (req.user.is_admin === Boolean(true)) {\n    return res.status(401).json({\n      status: 401,\n      error: 'Not authorized to perform this operation',\n    });\n  }\n  return next();\n};\n\nexport const generateToken = ({ id, email }) => {\n  jwt.sign({ id, email }, secretKey,\n    {\n      expiresIn: expirationTime,\n    });\n};\n\nexport const hashPassword = password => bcrypt.hashSync(password, bcrypt.genSaltSync(10));\n\n// eslint-disable-next-line consistent-return\nexport const registerValidator = (req, res, next) => {\n  const { error } = authenticateUser.signupValidator(req.body);\n  if (error) return res.status(400).json({ status: 400, error: error.details[0].message });\n  return next();\n};\n\nexport const loginValidator = (req, res, next) => {\n  const { error } = authenticateUser.UserLoginValidator(req.body);\n  if (error) return res.status(400).json({ status: 400, error: error.details[0].message });\n  return next();\n};\n\n\nexport const validateTrip = (req, res, next) => {\n  const { error } = authenticateTrip.tripValidator(req.body);\n  if (error) return res.status(400).json({ status: 400, error: error.details[0].message });\n  return next();\n};\n\nexport const booktripValidate = (req, res, next) => {\n  const { error } = authenticateBook.bookingValidator(req.body);\n  if (error) return res.status(400).json({ status: 400, error: error.details[0].message });\n  return next();\n};\n\nexport const editBookedSeatValidate = (req, res, next) => {\n  const { error } = authenticateBook.editBookedSeat(req.body);\n  if (error) return res.status(400).json({ status: 400, error: error.details[0].message });\n  return next();\n};\n"],"file":"auth.js"}